0-add_integer
======================

Using "add_integer"
-------------------

    A function that add two integers or floats, as integers.
    Import the function:

    >>> import os
    >>> add_integer = __import__('0-add_integer').add_integer

    Hold Cases:

    Normal case:

    >>> add_integer(1,2)
    3

    TypeError cases:

    >>> add_integer([1], -1)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(8, "not_an_int")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(8, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(True, "not_a_int")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(-3, 3+5j)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(9)
    107

    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    Overflow cases:

    >>> add_integer(100e+1000, 1)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    ValueError cases:

    >>> add_integer(1, float("NaN"))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
